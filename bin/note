#!/bin/bash

DATE=$(date +%F)
NOTE=$HOME/notes/daily/$DATE.md

SEARCH=""
TYPE=""

WIKI=0

BASE=$HOME/notes

# Pushd and popd that don't log!

pushd () {
    command pushd "$@" > /dev/null
}

popd () {
    command popd "$@" > /dev/null
}

# Argument parsing

while (( "$#" )); do
  case "$1" in
    wiki)
      shift 1
      WIKI=1
      BASE=$HOME/git/website/content/wiki
      ;;
    serve)
      shift 1

      if [ $WIKI ]; then
        pushd $HOME/git/website/
      else
        pushd $HOME/bin/.note-theme/
      fi

      hugo server -D
      popd

      exit 0
      ;;
    open)
      shift 1

      pushd $BASE

      FILE=$(find ./ -iname "*.md" -type f -printf '%T@ %p\n' | \
        sort -k1 -n | \
        sed -E "s/^[0-9]+.[0-9]+\s\.\///g" | \
        fzf --no-sort --preview="bat {} --style=plain --color=always")
      set +e

      if [ -z "$FILE" ]; then
        exit 1
      fi

      NOTE=$BASE/$FILE

      popd
      ;;
    new)
      FILE=$2
      NOTE="$BASE/${FILE%.md}.md"

      if [ ! -f $NOTE ]; then
        echo "---" > $NOTE
        echo "date: $DATE" >> $NOTE
        echo "---" >> $NOTE
      fi

      shift 2
      ;;
    -s|--search)
      SEARCH=$2
      shift 2
      ;;
    -t|--type)
      TYPE=$2
      shift 2
      ;;
    -h|--help)
      echo "usage: note"
      echo "       note [--help]"
      echo "       note [--search | -s <term>]"
      echo "       note [--type | -t <type>]"
      echo ""
      echo "Create a new note, opening it in nvim:"
      echo "       note"
      echo ""
      echo "Search all notes for a specific term, e.g. cats"
      echo "       note --search cats"
      echo ""
      echo "Show everything that is marked as a todo"
      echo "       note --type todo"
      echo ""
      exit 0
      ;;
    --) # end argument parsing
      shift
      break
      ;;
    -*|--*=) # unsupported flags
      echo "Error: Unsupported flag $1" >&2
      exit 1
      ;;
  esac
done

open_files () {
  local FILES=$1
  if [ -z "$FILES" ]
  then
    echo "No files found :)" >&2
    exit 1
  else
    nvim -q <(echo -e "$FILES") +copen
  fi
  exit 0
}

if [ ! -z "$TYPE" ]
then
  FILES=$(rg -i "^\s*-?\s?$TYPE:" $BASE --vimgrep | tac)
  open_files "$FILES"
fi

if [ ! -z "$SEARCH" ]
then
  FILES=$(rg -i "$SEARCH" $BASE --vimgrep)
  open_files "$FILES"
fi

if [ ! -f $NOTE ]
then
  echo "---" > $NOTE
  echo "date: $DATE" >> $NOTE
  echo "---" >> $NOTE
  echo "# $(date '+%A, %B %e')" >> $NOTE
fi

pushd $BASE
nvim $NOTE '+norm!Go## '$(date '+%R')
